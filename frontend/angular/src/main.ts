import 'zone.js';  // Import Zone.js first
import { bootstrapApplication } from '@angular/platform-browser';
import { Amplify } from 'aws-amplify';

import { AppComponent } from './app/app.component';
import { appConfig } from './app/app.config';

// Import AWS configuration (generated by CDK)
async function initializeApp() {
  let awsExports;
  try {
    awsExports = (await import('./aws-exports.js')).default;
    console.log('Using generated AWS configuration:', awsExports);
    
    // Configure Amplify with the aws-exports format
    Amplify.configure(awsExports);
    console.log('Amplify configured successfully');
  } catch (error) {
    console.error('Failed to load AWS configuration:', error);
    console.warn('Using fallback configuration for development');
    
    // Fallback configuration for local development
    const fallbackConfig = {
      aws_project_region: 'us-east-1',
      aws_cognito_region: 'us-east-1',
      aws_user_pools_id: 'us-east-1_XXXXXXXXX',
      aws_user_pools_web_client_id: 'xxxxxxxxxxxxxxxxxxxxxxxxxx',
      aws_cognito_username_attributes: ['email'],
      aws_cognito_social_providers: [],
      aws_cognito_signup_attributes: ['email'],
      aws_cognito_mfa_configuration: 'OFF',
      aws_cognito_password_protection_settings: {
        passwordPolicyMinLength: 8,
        passwordPolicyCharacters: []
      },
      aws_cognito_verification_mechanisms: ['email'],
      aws_appsync_graphqlEndpoint: 'https://localhost:3000/graphql',
      aws_appsync_region: 'us-east-1',
      aws_appsync_authenticationType: 'AMAZON_COGNITO_USER_POOLS'
    };
    
    Amplify.configure(fallbackConfig);
  }

  // Bootstrap the Angular application with proper config
  bootstrapApplication(AppComponent, appConfig)
    .catch(err => console.error('Failed to bootstrap Angular app:', err));
}

// Initialize the application
initializeApp();
